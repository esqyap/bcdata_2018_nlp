---
title: "Frequency of germline variants identified in blood DNA"
author: "Eva Yap"
date: '2017-11-16'
output: 
  html_document: 
    keep_md: yes
editor_options: 
  chunk_output_type: console
---
## Overview

In this project, frequency of germline variants identified in blood DNA was presented.

```{r global_options, include=FALSE}
knitr::opts_chunk$set(fig.width=38, fig.height=16,
                      echo=FALSE, warning=FALSE, message=FALSE)

knitr::opts_knit$set(root.dir = "../")
```

```{r Load libraries and dependencies, results='hide', warning=FALSE}
library(data.table)
library(ggplot2)
library(psych)
library(RColorBrewer)

## load data
variants_clean <- fread("./results/clean_variant_output/variants_clean.tsv", sep = "\t", colClasses = "character")
```

```{r Add clinvar info, results='hide', eval=FALSE}
germline_clinvar <- variants_clean[Sample_Type == "Blood", .N, by = c("GENE2", "CHR_POS_REF_ALT", "AA2", "ID", "AF", "ONEKG_ALT", "COMMON", "SYN", "EFFECT2", "VC", "CADDPHRED", "CADDRAW")]
setkey(germline_clinvar, GENE2, CHR_POS_REF_ALT)

write.table(germline_clinvar, "./results/clinvar_variants/germline_variants_blood_count.csv", sep = ",", row.names = F, quote = F)
```

## Frequency of germline variants identified in blood DNA

```{r Clean germline variants distribution, results='hide'}
germline_clinvar <- fread("./results/clinvar_variants/germline_variants_blood_count_clinvar.csv", sep = ",")

# add ClinVar 
germline_blood <- merge(variants_clean[Sample_Type == "Blood"], germline_clinvar[,.(CHR_POS_REF_ALT, ClinVar)], 
                        by = "CHR_POS_REF_ALT")

germline_blood[ID %like% "rs180126", AA2 := "p.Cys29Arg/c.85T>C"]
germline_blood[ID %like% "rs1057079", AA2 := "p.Ala1577Ala/c.4731A>G"]
germline_blood[ID %like% "rs1064261", AA2 := "p.Asn999Asn/c.2997T>C"]
germline_blood[ID %like% "rs1042522", AA2 := "p.Arg72Pro/c.215G>C"]

germline_blood_pct <- germline_blood[, .N, by = c("ClinVar", "GENE2", "AA2", "CHR_POS", "AF")][,.(GENE2, CHR_POS, AA2, ClinVar, AF, N, Patient=213, Pct=N/213*100)]
setkey(germline_blood_pct, GENE2, CHR_POS, ClinVar)

germline_blood_pct_gt <- germline_blood[,.N, by = c("ClinVar", "GENE2", "AA2", "GT", "CHR_POS", "AF")][,.(GENE2, CHR_POS, AA2, ClinVar, GT, AF, N, Patient=213, Pct=N/213*100)]
setkey(germline_blood_pct_gt, GENE2, CHR_POS, ClinVar, GT)
```

```{r save the list, eval=FALSE}
write.table(germline_blood_pct, "./results/germline_variants_blood_frequency/germline_blood_pct.tsv", sep = "\t", row.names = F, quote = F)
write.table(germline_blood_pct_gt, "./results/germline_variants_blood_frequency/germline_blood_pct_gt.tsv", sep = "\t", row.names = F, quote = F)
```

```{r show frequency for germline variants}
germline_blood_pct_gt
```

## Bar plot for germline variants in cancer-related genes (blood)

```{r Bar plot for cancer genes per variant with pct, results='hide'}
bar_cancer_genes <- germline_blood[!(GENE2 %like% "DPYD|GSTP1|MTHFR|TYMP|TYMS|UGT1A1")][ ,.N, by = c("BCCA_Agency_ID", "ClinVar")]

# add total germline calls
bar_cancer_genes <- merge(bar_cancer_genes, bar_cancer_genes[, .(Total_N=sum(N)), by = "BCCA_Agency_ID"], by = "BCCA_Agency_ID")
setorder(bar_cancer_genes, -Total_N, BCCA_Agency_ID)
bar_cancer_genes[, BCCA_Agency_ID := factor(BCCA_Agency_ID, levels = bar_cancer_genes[, unique(BCCA_Agency_ID)])]
bar_cancer_genes[is.na(ClinVar), ClinVar := "Not available"]

# relevel ClinVar Terms
bar_cancer_genes[, ClinVar := factor(ClinVar, levels = c("Benign", "Likely_benign", "Benign_Likely_benign",
                                                         "Conflicting_interpretations_of_pathogenicity", 
                                                         "Uncertain_significance", 
                                                         "Drug_response", "Not available"))]

pct_cancer <- germline_blood_pct[!(GENE2 %like% "DPYD|GSTP1|MTHFR|TYMS|TYMP|UGT1A1")]

# relevel ClinVar Terms
pct_cancer[is.na(ClinVar), ClinVar := "Not available"]
pct_cancer[, ClinVar := factor(ClinVar, levels = c("Benign", "Likely_benign", "Benign_Likely_benign", "Conflicting_interpretations_of_pathogenicity", "Uncertain_significance", "Drug_response", "Not available"))]
pct_cancer[, GENE2_AA2 := paste(GENE2, AA2, sep = " ")]

# set order
setorder(pct_cancer, ClinVar)
pct_cancer[, GENE2_AA2 := factor(GENE2_AA2, levels = pct_cancer[, GENE2_AA2])]

```

```{r Plot cancer genes}
ggplot(pct_cancer, aes(x = GENE2_AA2, y = N, fill = ClinVar)) + 
  geom_bar(stat="identity")+
  theme_bw() + 
  scale_y_continuous(breaks = seq(0, 200, 50), trans = "log1p") +
  scale_fill_manual(name = "ClinVar Terms", values = brewer.pal(8, "Accent")[c(5, 2, 1, 7, 6, 3, 8)], 
                    labels = c("Benign", "Likely benign", "Benign/Likely benign", "Conflicting interpretations \nof pathogenicity", "Uncertain significance", "Drug response", "Not available")) +  
 theme(legend.title = element_text(size = 28, face = "bold"), 
        legend.text = element_text(size = 28), legend.position = "right",
        legend.key = element_rect(size = 5),
        legend.key.size = unit(4, 'lines'),
        axis.text = element_text(size = 28),
        axis.title = element_text(size = 30, face = "bold"),
        axis.text.x = element_text(size = 24, angle = 90, hjust = 1, vjust = 0.5)) +
  geom_text(aes(label = pct_cancer[, paste(round(Pct, 1), "%", sep ="")]), size = 6, position = position_dodge(width=1), vjust = -0.5) + 
  ylab("Number of Patients") +
  xlab("") +
  guides(color = guide_legend(override.aes=list(size=5)))
```

```{r Save bar plot for cancer genes, eval=FALSE}
ggsave("./plots/bar_cancer_genes_pct.png", width = 38, height = 16)
```

### Summary statistics for number of germline variants in cancer genes

```{r summary cancer genes variants}
unique(bar_cancer_genes[,.(BCCA_Agency_ID, Total_N)])[, describe(Total_N)]
```

### Distribution of effect prediction of germline variants in cancer genes

```{r SnpEff cancer genes}
germline_blood[!(GENE2 %like% "DPYD|GSTP1|MTHFR|TYMP|TYMS|UGT1A1"),.N, by = c("CHR_POS_REF_ALT", "EFFECT2")][,.N, by = "EFFECT2"][, .(EFFECT2, N, Total=50, Pct_N=N/50*100)]
```

### Distribution of ClinVar annotation of germline variants in cancer genes

```{r ClinVar cancer genes}
germline_clinvar[!(GENE2 %like% "DPYD|GSTP1|MTHFR|TYMP|TYMS|UGT1A1"),.N, by = "ClinVar"][, .(ClinVar, N, Total=50, Pct_N=N/50*100)]
```

### Interpretation of germline variants in cancer genes using ExAC

> How many variants have population allele frequencies of < 1%?

```{r ExAC cancer genes 1}
nrow(germline_clinvar[!(GENE2 %like% "DPYD|GSTP1|MTHFR|TYMP|TYMS|UGT1A1") & AF < 0.01])
```

> How many variants have population allele frequencies of >= 1%?

```{r ExAC cancer genes 2}
nrow(germline_clinvar[!(GENE2 %like% "DPYD|GSTP1|MTHFR|TYMP|TYMS|UGT1A1") & AF >= 0.01])
```

> How many variants were not reported?

```{r ExAC cancer genes 3}
nrow(germline_clinvar[!(GENE2 %like% "DPYD|GSTP1|MTHFR|TYMP|TYMS|UGT1A1") & is.na(AF)])
```

## Bar plot for germline variants in pharmacogenomic-related genes (blood)

```{r Bar plot for PGx genes, results='hide'}
bar_pgx_genes <- germline_blood[GENE2 %like% "DPYD|GSTP1|MTHFR|TYMP|TYMS|UGT1A1"][ ,.N, by = c("BCCA_Agency_ID", "ClinVar")]

# add total germline calls
bar_pgx_genes <- merge(bar_pgx_genes, bar_pgx_genes[, .(Total_N=sum(N)), by = "BCCA_Agency_ID"], by = "BCCA_Agency_ID")
setorder(bar_pgx_genes, -Total_N, BCCA_Agency_ID)
bar_pgx_genes[, BCCA_Agency_ID := factor(BCCA_Agency_ID, levels = bar_pgx_genes[, unique(BCCA_Agency_ID)])]
bar_pgx_genes[is.na(ClinVar), ClinVar := "Not available"]

# relevel ClinVar Terms
bar_pgx_genes[, ClinVar := factor(ClinVar, levels = c("Benign", "Benign_Likely_benign", "Benign_Likely_benign,Not_provided", "Conflicting_interpretations_of_pathogenicity", "Conflicting_interpretations_of_pathogenicity,association", "Conflicting_interpretations_of_pathogenicity,Not_provided", "Uncertain_significance", "Drug_response", "Not_provided", "Not available"))]

pct_pgx <- germline_blood_pct[GENE2 %like% "DPYD|GSTP1|MTHFR|TYMS|TYMP|UGT1A1"]

# relevel ClinVar Terms
pct_pgx[is.na(ClinVar), ClinVar := "Not available"]

# relevel ClinVar Terms
pct_pgx[, ClinVar := factor(ClinVar, levels = c("Benign", "Benign_Likely_benign", "Benign_Likely_benign,Not_provided", "Conflicting_interpretations_of_pathogenicity", "Conflicting_interpretations_of_pathogenicity,association", "Conflicting_interpretations_of_pathogenicity,Not_provided", "Uncertain_significance", "Drug_response", "Not_provided", "Not available"))]

# change the AA2 for UGT1A1
pct_pgx[CHR_POS == "chr2_234668870", AA2 := "c.-64G>C"]
pct_pgx[CHR_POS == "chr2_234668879", AA2 := "c.-55 -54insAT"]
pct_pgx[, GENE2_AA2 := paste(GENE2, AA2, sep = " ")]

# set order
setorder(pct_pgx, ClinVar)
pct_pgx[, GENE2_AA2 := factor(GENE2_AA2, levels = pct_pgx[, GENE2_AA2])]
```

```{r Bar plot for PGx genes per variant with pct}
ggplot(pct_pgx, aes(x = GENE2_AA2, y = N, fill = ClinVar)) + 
  geom_bar(stat="identity")+
  theme_bw() + 
  scale_y_continuous(trans = "log1p") +
  scale_fill_manual(name = "ClinVar Terms", values = c("#386CB0", "#7FC97F", "#FFFF99", "#BF5B17", "#E31A1C", "#6A3D9A", "#F0027F", "#FDC086", "#006837", "#666666"), labels = c("Benign", "Benign/Likely benign", "Benign/Likely benign, Not provided", "Conflicting interpretations \nof pathogenicity", "Conflicting interpretations \nof pathogenicity, \nAssociation", "Conflicting interpretations \nof pathogenicity, \nNot provided", "Uncertain significance", "Drug response", "Not provided", "Not available")) +  
 theme(legend.title = element_text(size = 30, face = "bold"), 
        legend.text = element_text(size = 28), legend.position = "right",
        legend.key = element_rect(size = 5),
        legend.key.size = unit(6, 'lines'),
        axis.text = element_text(size = 28),
        axis.title = element_text(size = 30, face = "bold"),
        axis.text.x = element_text(size = 28, angle = 90, hjust = 1, vjust = 0.5)) +
  geom_text(aes(label = pct_pgx[, paste(round(Pct, 1), "%", sep ="")]), size = 8, position = position_dodge(width=1), vjust = -0.5) + 
  ylab("Number of Patients") +
  xlab("") +
  guides(color = guide_legend(override.aes=list(size=6)))
```

```{r Save bar plot with pct for pgx genes, eval=FALSE}
ggsave("./plots/bar_pgx_genes_pct.png", width = 32, height = 20)
```

### Summary statistics for number of germline variants in pharmacogenomic-related genes

```{r summary pgx genes variants}
unique(bar_pgx_genes[,.(BCCA_Agency_ID, Total_N)])[, describe(Total_N)]
```

### Distribution of effect prediction of germline variants in pharmacogenomic-related genes

```{r SnpEff pgx genes}
germline_blood[GENE2 %like% "DPYD|GSTP1|MTHFR|TYMP|TYMS|UGT1A1",.N, by = c("CHR_POS_REF_ALT", "EFFECT2")][,.N, by = "EFFECT2"][, .(EFFECT2, N, Total=23, Pct_N=N/23*100)]
```

### Distribution of ClinVar annotation of germline variants in pharmacogenomic-related genes

```{r Clinvar pgx genes}
germline_clinvar[GENE2 %like% "DPYD|GSTP1|MTHFR|TYMP|TYMS|UGT1A1",.N, by = "ClinVar"][, .(ClinVar, N, Total=23, Pct_N=N/23*100)]
```

### Interpretation of germline variants in pharmacogenomic-related genes using ExAC

> How many variants have population allele frequencies of < 1%?

```{r ExAC PGx genes}
nrow(germline_clinvar[GENE2 %like% "DPYD|GSTP1|MTHFR|TYMP|TYMS|UGT1A1" & AF < 0.01])
```

> How many variants have population allele frequencies of >= 1%?

```{r ExAC PGx genes 2}
nrow(germline_clinvar[GENE2 %like% "DPYD|GSTP1|MTHFR|TYMP|TYMS|UGT1A1" & AF >= 0.01])
```

> How many variants were not reported?

```{r ExAC PGx genes 3}
nrow(germline_clinvar[GENE2 %like% "DPYD|GSTP1|MTHFR|TYMP|TYMS|UGT1A1" & is.na(AF)])
```
